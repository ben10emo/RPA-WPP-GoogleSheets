import os.path # lib -                               
import time # lib - temporizador
from google.auth.transport.requests import Request 
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from selenium import webdriver # utilizar o navegador
from selenium.webdriver.common.keys import Keys # Keys módulo do selenium simula teclas do teclado 
import urllib # decodificar para url
from selenium.webdriver.common.by import By # encontrar elementos 
from selenium.webdriver.support.ui import WebDriverWait # esperar até encontrar um elementp visual no site
from selenium.webdriver.support import expected_conditions as EC #  esperar até encontrar um elemento visual no site

navegador = webdriver.Chrome() # Selecionando do módulo webdriver o navegador chrome, e armazenando na variavel navegador 
navegador.get('https://web.whatsapp.com/') # dando um get no link que queremos acessar
while len(navegador.find_elements(By.ID,"side")) <1: 
  # Enquanto a quantidade de elementos com ID side for menor que 1, ele vai dormir por 1 seg, e vai retornar novamente
    time.sleep(1)
 # Ele vai dormir por 1 seg, e vai retornar novamente
SCOPES = ["https://www.googleapis.com/auth/spreadsheets"] # api do google


SAMPLE_SPREADSHEET_ID = "1RQn-mf2E3Fhh5FIeF5dshHe_knz0BWzz_KXHS9tCUa0" # ID da planilha
SAMPLE_RANGE_NAME = "Página1!A1:C100" # range = alcance da planilha 

def is_spreadsheet_empty(values):
    return not any(values)


def main(): 
  """Shows basic usage of the Sheets API.
  Prints values from a sample spreadsheet.
  """ 
  creds = None
 
  if os.path.exists("token.json"):
    creds = Credentials.from_authorized_user_file("token.json", SCOPES)
  
  if not creds or not creds.valid:
    if creds and creds.expired and creds.refresh_token:
      creds.refresh(Request())
    else:
      flow = InstalledAppFlow.from_client_secrets_file(
          "credentials.json", SCOPES
      )
      creds = flow.run_local_server(port=0)
  
    with open("token.json", "w") as token:
      token.write(creds.to_json())


  while True:
    try:
      #pega valores da planilha
      service = build("sheets", "v4", credentials=creds)
      sheet = service.spreadsheets()
      result = (
          sheet.values()
          .get(spreadsheetId=SAMPLE_SPREADSHEET_ID, range=SAMPLE_RANGE_NAME) 
          .execute()
      ) # Pega as informações da planilha 

      valores = result.get("values", []) # armazena os valores da planilha na variavel (values) em formato de listas
      print(valores)
      
      #limpa valores da planilha
      clear_values_request_body = {}
      service.spreadsheets().values().clear(
          spreadsheetId=SAMPLE_SPREADSHEET_ID,
          range=SAMPLE_RANGE_NAME,
          body=clear_values_request_body
      ).execute()

      time.sleep(5) 
      
      for i in valores: # para cada indice na variavel values
        mensagem = f'Risco de No Show Line Haul\nCliente: Mercado Livre\nProtocolo: {i[1]}\nMotorista: {i[0]}\nDestino: {i[2]}'
        # armazenar na variavel mensagem - motorista = indice 0 da primeira lista de values
        texto = urllib.parse.quote(mensagem) #transformar a mensagem em codificação URL
        link = f"https://web.whatsapp.com/send?phone=5511967016418&text={texto}" #link para enviar mensagem instantanea
        navegador.get(link)
        wait = WebDriverWait(navegador, 10)
        wait.until(EC.visibility_of_element_located((By.ID, "side")))
        while len(navegador.find_elements(By.XPATH,'//*[@id="app"]/div/span[2]/div/span/div/div/div/div/div')) >0:
          time.sleep(1)
        #esperar o elemento com a determinada XPATH desaparecer da tela
        wait.until(EC.visibility_of_element_located((By.XPATH, '//*[@id="main"]/footer/div[1]/div/span[2]/div/div[2]/div[1]/div/div/p/span')))
        barra = navegador.find_element(By.XPATH, '//*[@id="main"]/footer/div[1]/div/span[2]/div/div[2]/div[1]/div/div/p/span')
        #armazenar na variavel barra, o xpath da barra de digitação
        barra.send_keys(Keys.ENTER)
        print('mensagem enviada!')
        time.sleep(5)
          
          
    finally:
      print('procurando...')                  


if __name__ == "__main__":
    main()
